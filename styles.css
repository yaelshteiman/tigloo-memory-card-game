* {
    box-sizing: border-box;
    margin-top: 0;
    padding: 0;
}

body{
    font-family: sans-serif;
    background-color: #f7f8fc;
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

#app {
    text-align: center;
    width: 80%;
    max-width: 500px;
}

.controls {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

#timer, #moves {
    font-size: 18px;
}

.grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px 10px; /* First value: row gap, second value: column gap */
}

.card {
    width: 100px;
    height: 100px;
    position: relative;
    perspective: 1000px; /* Perspective for the 3D flip effect */
}

.card-inner {
    width: 100%;
    height: 100%;
    position: absolute;
    transform-style: preserve-3d;
    transition: transform 0.6s;
    /*transform: rotateY(0deg); !* Initial state: not flipped *!*/
}

.card.flipped .card-inner {
    transform: rotateY(180deg); /* Flip the card when 'flipped' class is added */
}

/*.card.matched .card-inner {*/
/*    transform: none; !* Keep matched cards face-up *!*/
/*}*/

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Hide the back side when not flipped */
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
}

.card-front {
    /*display: flex;*/
    /*justify-content: center;*/
    /*align-items: center;*/
    color: black;
    width: 100%;
    height: 100%;
    /*position: relative;*/
    transform: rotateY(180deg); /* Rotate the front side so it's hidden initially */
}

.card-back {
    background-color: #f0f0f0;
}

/* Color-specific styles for the card front */
.card-front.blue {
    background-color: blue;
}

.card-front.red {
    background-color: red;
}

.card-front.green {
    background-color: green;
}

/* Shape-specific styles */
.card-front.circle {
    border-radius: 50%; /* Make the card front a circle */
}

.card-front.square {
    /* Default square, no additional styles needed */
}

/*.card-front.trapeze {*/
/*    !*background-color: transparent; !* Remove background color *!*!*/
/*    position: relative;*/
/*    !*width: 100px;*!*/
/*    !*height: 100px;*!*/
/*    margin: auto;*/
/*    clip-path: polygon(15% 0, 85% 0, 100% 100%, 0% 100%); !* Create a trapezoid shape *!*/
/*}*/

@keyframes confetti {
    0% { transform: translateY(0); opacity: 1; }
    100% { transform: translateY(100vh); opacity: 0; }
}

/* Congratulations message styling */
.congrats-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 2rem;
    font-weight: bold;
    color: #ff5722;
    background-color: rgba(255, 255, 255, 0.8);
    padding: 20px 40px;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    text-align: center;
    animation: fadeInOut 3s forwards;
}

@keyframes fadeInOut {
    0% { opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { opacity: 0; }
}

/* Confetti animation */
@keyframes confetti {
    0% { transform: translateY(0); opacity: 1; }
    100% { transform: translateY(100vh); opacity: 0; }
}

.confetti {
    position: fixed;
    width: 10px;
    height: 10px;
    background-color: #ff0;
    animation: confetti 3s linear infinite;
    opacity: 0;
}

.confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    overflow: hidden;
    z-index: 1000;
}
